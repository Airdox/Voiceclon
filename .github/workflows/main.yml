Name: Android APK Build (PyQt6 with python-for-android)

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Type of build (debug or release)'
        required: false
        default: 'debug'
        type: choice
        options:
          - debug
          - release
      target_arch:
        description: 'Target CPU Architecture for Android'
        required: false
        default: 'arm64-v8a'
        type: choice
        options:
          - arm64-v8a
          - armeabi-v7a
          - 'arm64-v8a,armeabi-v7a'

jobs:
  build-apk:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python Environment (3.10)
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'
        # HIER DEN PFAD ANPASSEN, WIE VORHER BESPROCHEN!
        cache-dependency-path: requirements_dev.txt # ODER 'src/requirements_dev' etc.

    - name: Create Python Virtual Environment
      run: |
        echo "Creating Python virtual environment..."
        python -m venv .venv_p4a
        # Aktiviere die venv, um sicherzustellen, dass alle folgenden pip- und python-Befehle
        # in dieser Umgebung ausgef端hrt werden.
        echo "##[group]Activate venv and check pip version"
        source .venv_p4a/bin/activate
        pip --version
        echo "##[endgroup]"

    - name: Install python-for-android (P4A) and essential build dependencies
      run: |
        echo "Installing essential Python packages into .venv_p4a..."
        # Aktiviere die venv erneut f端r diese Shell, um sicherzustellen, dass pip richtig ist
        source .venv_p4a/bin/activate
        pip install --upgrade pip setuptools wheel
        pip install python-for-android==2023.10.20 # Eine spezifische, bekannte Version hilft bei Konsistenz

        echo "Installing necessary system dependencies for P4A..."
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          git \
          zip \
          unzip \
          openjdk-17-jdk \
          libtool \
          pkg-config \
          zlib1g-dev \
          libncurses5-dev \
          libncursesw5-dev \
          libjemalloc-dev \
          patchelf

    - name: Install Project-Specific Python Dependencies
      run: |
        echo "Installing project requirements from requirements_dev.txt into .venv_p4a..."
        # Aktiviere die venv erneut f端r diese Shell
        source .venv_p4a/bin/activate
        pip install -r requirements_dev.txt

    - name: Determine Build Parameters
      id: build_params
      run: |
        BUILD_TYPE="${{ github.event.inputs.build_type || 'debug' }}"
        TARGET_ARCH="${{ github.event.inputs.target_arch || 'arm64-v8a' }}"
        echo "build_type=${BUILD_TYPE}" >> "$GITHUB_OUTPUT"
        echo "target_arch=${TARGET_ARCH}" >> "$GITHUB_OUTPUT"
        echo "Determined Build Type: $BUILD_TYPE, Target Architecture: $TARGET_ARCH"

    - name: Build Android APK with python-for-android
      run: |
        echo "Starting python-for-android APK build using .venv_p4a interpreter..."
        # Aktiviere die venv f端r diese Shell, bevor p4a aufgerufen wird
        source .venv_p4a/bin/activate
        python -m python_for_android.toolchain create \
          --dist-name=voiceclon_app_dist \
          --name="VoiceClon AI" \
          --package=com.airdox.voiceclon.ai \
          --requirements=python3,pyqt6,requests,numpy,scipy,sqlite3,speechrecognition,pydub \
          --bootstrap=sdl2 \
          --private . \
          --version=1.0.0 \
          --build-toolchain=android \
          --arch="${{ steps.build_params.outputs.target_arch }}" \
          --enable-jni \
          ${{ steps.build_params.outputs.build_type }}

    - name: Upload Generated APK as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: voiceclon-android-apk-${{ steps.build_params.outputs.build_type }}-${{ steps.build_params.outputs.target_arch }}
        path: bin/*.apk
        retention-days: 7

    - name: Notify on Completion
      if: always()
      run: |
        echo "## Android APK build for VoiceClon App completed."
        echo "### Build Details:"
        echo "- **Build Type:** ${{ steps.build_params.outputs.build_type }}"
        echo "- **Target Architecture:** ${{ steps.build_params.outputs.target_arch }}"
        echo "- **Download APK:** Check the 'Artifacts' section below for the generated APK file."
        echo "---"
        echo "If the build failed, review the logs above for specific error messages."

